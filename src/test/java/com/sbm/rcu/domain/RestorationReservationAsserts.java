package com.sbm.rcu.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RestorationReservationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRestorationReservationAllPropertiesEquals(RestorationReservation expected, RestorationReservation actual) {
        assertRestorationReservationAutoGeneratedPropertiesEquals(expected, actual);
        assertRestorationReservationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRestorationReservationAllUpdatablePropertiesEquals(
        RestorationReservation expected,
        RestorationReservation actual
    ) {
        assertRestorationReservationUpdatableFieldsEquals(expected, actual);
        assertRestorationReservationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRestorationReservationAutoGeneratedPropertiesEquals(
        RestorationReservation expected,
        RestorationReservation actual
    ) {
        assertThat(actual)
            .as("Verify RestorationReservation auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRestorationReservationUpdatableFieldsEquals(RestorationReservation expected, RestorationReservation actual) {
        assertThat(actual)
            .as("Verify RestorationReservation relevant properties")
            .satisfies(a -> assertThat(a.getAggregateId()).as("check aggregateId").isEqualTo(expected.getAggregateId()))
            .satisfies(a -> assertThat(a.getAggregateType()).as("check aggregateType").isEqualTo(expected.getAggregateType()))
            .satisfies(a -> assertThat(a.getClientId()).as("check clientId").isEqualTo(expected.getClientId()))
            .satisfies(a -> assertThat(a.getDomaine()).as("check domaine").isEqualTo(expected.getDomaine()))
            .satisfies(a -> assertThat(a.getSource()).as("check source").isEqualTo(expected.getSource()))
            .satisfies(a -> assertThat(a.getTimestamp()).as("check reservationTimestamp").isEqualTo(expected.getTimestamp()))
            .satisfies(a -> assertThat(a.getProjection()).as("check projection").isEqualTo(expected.getProjection()))
            .satisfies(a -> assertThat(a.getDate()).as("check date").isEqualTo(expected.getDate()))
            .satisfies(a -> assertThat(a.getDepositAmount()).as("check depositAmount").isEqualTo(expected.getDepositAmount()))
            .satisfies(a -> assertThat(a.getTotalAmount()).as("check totalAmount").isEqualTo(expected.getTotalAmount()))
            .satisfies(a -> assertThat(a.getShift()).as("check shift").isEqualTo(expected.getShift()))
            .satisfies(a -> assertThat(a.getGuestCount()).as("check guestCount").isEqualTo(expected.getGuestCount()))
            .satisfies(a -> assertThat(a.getArrivalDate()).as("check arrivalDate").isEqualTo(expected.getArrivalDate()))
            .satisfies(a -> assertThat(a.getRestaurantName()).as("check restaurantName").isEqualTo(expected.getRestaurantName()))
            .satisfies(a -> assertThat(a.getRestaurantId()).as("check restaurantId").isEqualTo(expected.getRestaurantId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRestorationReservationUpdatableRelationshipsEquals(
        RestorationReservation expected,
        RestorationReservation actual
    ) {
        assertThat(actual)
            .as("Verify RestorationReservation relationships")
            .satisfies(a -> assertThat(a.getCancelled()).as("check cancelled").isEqualTo(expected.getCancelled()))
            .satisfies(a -> assertThat(a.getExpenses()).as("check expenses").isEqualTo(expected.getExpenses()))
            .satisfies(a -> assertThat(a.getMetadata()).as("check metadata").isEqualTo(expected.getMetadata()))
            .satisfies(a -> assertThat(a.getOneCustomer()).as("check oneCustomer").isEqualTo(expected.getOneCustomer()));
    }
}
