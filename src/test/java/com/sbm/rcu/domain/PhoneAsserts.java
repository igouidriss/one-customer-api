package com.sbm.rcu.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PhoneAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPhoneAllPropertiesEquals(Phone expected, Phone actual) {
        assertPhoneAutoGeneratedPropertiesEquals(expected, actual);
        assertPhoneAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPhoneAllUpdatablePropertiesEquals(Phone expected, Phone actual) {
        assertPhoneUpdatableFieldsEquals(expected, actual);
        assertPhoneUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPhoneAutoGeneratedPropertiesEquals(Phone expected, Phone actual) {
        assertThat(actual)
            .as("Verify Phone auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPhoneUpdatableFieldsEquals(Phone expected, Phone actual) {
        assertThat(actual)
            .as("Verify Phone relevant properties")
            .satisfies(a -> assertThat(a.getType()).as("check type").isEqualTo(expected.getType()))
            .satisfies(a -> assertThat(a.getNumber()).as("check number").isEqualTo(expected.getNumber()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPhoneUpdatableRelationshipsEquals(Phone expected, Phone actual) {
        assertThat(actual)
            .as("Verify Phone relationships")
            .satisfies(a -> assertThat(a.getPayload()).as("check payload").isEqualTo(expected.getPayload()));
    }
}
